#-------------------------------------------------
# Configuration
#------------------------------------------------

# Use vi mode
setw -g mode-keys vi

# Increase scrollback buffer size
set -g history-limit 10000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
set -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Improve colors
set -g default-terminal "${TERM}"
# set -g default-terminal "xterm-256color"

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'    

# Make colors inside tmux look the same as outside of tmux
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -as terminal-overrides 'rxvt*:RGB'

#Allow the mouse to resize windows and select tabs
set -g mouse on

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# address vim mode switching delay (https://superuser.com/a/252717)
set -sg escape-time 0

#------------------------------------------------
# Status line
#------------------------------------------------

# Status line customisation
set-option -g status-left-length 100
set-option -g status-right-length 100

set-option -g status-left " #{session_name}  "

set-option -g status-right "#{pane_title} "

set-option -g status-style "fg=#545c7e bg=#1f2335"

set-option -g window-status-format "#{window_index}:#{pane_current_command}#{window_flags} "
set-option -g window-status-current-format "#{window_index}:#{pane_current_command}#{window_flags} "

set-option -g window-status-current-style "fg=#E9E9EA"
set-option -g window-status-activity-style none

set-option -g pane-active-border-style "fg=#1f2335"
set-option -g pane-border-style "fg=#1f2335"

#------------------------------------------------
# Pane
#------------------------------------------------

# Pane customisation

#-------------------------------------------------
# Key Bindings
#-------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Set the prefix ton Ctrl+Space
set -g prefix C-Space

# Send prefix to a nested tmux session by doubling the prefix
bind C-Space send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.config/tmux.conf\; display-message '~/.config/tmux.conf reloaded'

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+


# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"


# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Switch between tho most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind ^ switch-client -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+-
# (or PREFIX+_) to split vertically. Also use the current pane path to define
# the new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

bind-key -r F new-window t
